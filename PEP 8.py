"""Principales Reglas de PEP 8

    Formato y Espaciado
        Usa 4 espacios por nivel de indentaci√≥n (no tabulaciones).
        Mant√©n l√≠neas de c√≥digo con m√°ximo 79 caracteres.
        Usa l√≠neas en blanco entre clases y funciones.

    Nombres de Variables y Funciones
        Funciones y variables: snake_case ‚Üí mi_funcion(), variable_ejemplo.
        Clases: CamelCase ‚Üí MiClaseEjemplo.
        Constantes: MAYUSCULAS ‚Üí VALOR_PI = 3.1416.
        Evita usar nombres de variables como l, O, I (pueden confundirse con n√∫meros).

    Importaciones
        Cada importaci√≥n en una l√≠nea
        Usa imports agrupados en este orden:
            Librer√≠as est√°ndar de Python
            Librer√≠as externas (Django, NumPy, etc.)
            M√≥dulos propios
            
    Espaciado dentro del c√≥digo
        Usa un solo espacio alrededor de operadores:       
        Evita espacios extra dentro de par√©ntesis y corchetes

    Comentarios y Docstrings
        Usa # para comentarios cortos:        
        Usa docstrings (""" """) en funciones y clases  """

#Ejemplo B√°sico: Correcci√≥n de estilo

#‚ùå Mal C√≥digo (No sigue PEP 8): Formato

def suma (a,b):return a+b

#‚úÖ Buen C√≥digo (Sigue PEP 8):

def suma(a, b):
    """Devuelve la suma de dos n√∫meros."""
    return a + b

#Ejemplo Intermedio: Formateo adecuado

#‚ùå Mal C√≥digo (Mala estructura, mal espaciado, imports desordenados):

import os,sys
def multiplicar(a,b): return a*b
print(multiplicar(3,5))

#‚úÖ Buen C√≥digo (Bien estructurado):

import os  
import sys  

def multiplicar(a, b):
    """Multiplica dos n√∫meros."""
    return a * b

if __name__ == "__main__":
    print(multiplicar(3, 5))

#Ejemplo Complejo: Organizaci√≥n de un proyecto

#üéØ C√≥mo organizar m√≥dulos correctamente siguiendo PEP 8.

#mi_proyecto/
#‚îÇ‚îÄ‚îÄ main.py
#‚îÇ‚îÄ‚îÄ calculadora.py
#‚îÇ‚îÄ‚îÄ tests/
#‚îÇ   ‚îú‚îÄ‚îÄ test_calculadora.py

#‚úÖ Ejemplo de calculadora.py con PEP 8 aplicado:

class Calculadora:
    """Calculadora b√°sica con operaciones matem√°ticas."""
    
    def suma(self, a, b):
        return a + b

    def resta(self, a, b):
        return a - b